name: Lint

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run oxlint
      run: npm run lint
      
    - name: Check for lint errors
      run: |
        if ! npm run lint > lint-results.txt 2>&1; then
          echo "## Lint Errors Found" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat lint-results.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          exit 1
        else
          echo "## Lint Check Passed ✅" >> $GITHUB_STEP_SUMMARY
          echo "No lint errors found!" >> $GITHUB_STEP_SUMMARY
        fi

  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run TypeScript type checking
      run: npm run typecheck
      
    - name: Check for type errors
      run: |
        if ! npm run typecheck > typecheck-results.txt 2>&1; then
          echo "## TypeScript Errors Found" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat typecheck-results.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          exit 1
        else
          echo "## Type Check Passed ✅" >> $GITHUB_STEP_SUMMARY
          echo "No type errors found!" >> $GITHUB_STEP_SUMMARY
        fi

  format-check:
    name: Format Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check file formatting
      run: |
        # Check for trailing whitespace
        if grep -r --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" '[[:space:]]$' src/ tests/; then
          echo "## Formatting Issues Found" >> $GITHUB_STEP_SUMMARY
          echo "Files contain trailing whitespace" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi
        
        # Check for mixed line endings
        if find src/ tests/ -name "*.ts" -o -name "*.tsx" -o -name "*.js" -o -name "*.jsx" | xargs file | grep -q CRLF; then
          echo "## Line Ending Issues Found" >> $GITHUB_STEP_SUMMARY
          echo "Files contain CRLF line endings" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi
        
        echo "## Format Check Passed ✅" >> $GITHUB_STEP_SUMMARY
        echo "No formatting issues found!" >> $GITHUB_STEP_SUMMARY

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: |
        if ! npm audit --audit-level=high > audit-results.txt 2>&1; then
          echo "## Security Vulnerabilities Found" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat audit-results.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Please run 'npm audit fix' to resolve these issues." >> $GITHUB_STEP_SUMMARY
          exit 1
        else
          echo "## Security Audit Passed ✅" >> $GITHUB_STEP_SUMMARY
          echo "No high-severity vulnerabilities found!" >> $GITHUB_STEP_SUMMARY
        fi

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Check for outdated dependencies
      run: |
        echo "## Dependency Status" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        npm outdated >> $GITHUB_STEP_SUMMARY || true
        echo '```' >> $GITHUB_STEP_SUMMARY
        
    - name: Check for unused dependencies
      run: |
        # Install depcheck for unused dependency detection
        npm install -g depcheck
        
        # Run depcheck and capture results
        if depcheck --json > depcheck-results.json; then
          UNUSED=$(cat depcheck-results.json | grep -o '"dependencies":\[[^]]*\]' | sed 's/"dependencies":\[//g' | sed 's/\]//g' | tr -d '"' | tr ',' '\n' | wc -l)
          
          if [ "$UNUSED" -gt 0 ]; then
            echo "## Unused Dependencies Found" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            cat depcheck-results.json >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "## No Unused Dependencies ✅" >> $GITHUB_STEP_SUMMARY
          fi
        fi

  lint-summary:
    name: Lint Summary
    runs-on: ubuntu-latest
    needs: [lint, typecheck, format-check, security-audit, dependency-check]
    if: always()
    
    steps:
    - name: Create lint summary
      run: |
        echo "## Lint Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Code Linting | ${{ needs.lint.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Type Checking | ${{ needs.typecheck.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Format Check | ${{ needs.format-check.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Security Audit | ${{ needs.security-audit.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Dependency Check | ${{ needs.dependency-check.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Set overall status
        if [ "${{ needs.lint.result }}" = "success" ] && [ "${{ needs.typecheck.result }}" = "success" ] && [ "${{ needs.format-check.result }}" = "success" ] && [ "${{ needs.security-audit.result }}" = "success" ]; then
          echo "## Overall Status: ✅ PASSED" >> $GITHUB_STEP_SUMMARY
        else
          echo "## Overall Status: ❌ FAILED" >> $GITHUB_STEP_SUMMARY
        fi